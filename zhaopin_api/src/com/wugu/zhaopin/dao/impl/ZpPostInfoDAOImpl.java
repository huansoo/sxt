package com.wugu.zhaopin.dao.impl;

import com.wugu.zhaopin.dao.ZpPostInfoDAO;
import com.wugu.zhaopin.vo.ZpPostInfo;
import com.wugu.zhaopin.vo.ZpPostInfoCriteria;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;

public class ZpPostInfoDAOImpl implements ZpPostInfoDAO {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	private SqlMapClient sqlMapClient;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public ZpPostInfoDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int countByExample(ZpPostInfoCriteria example) throws SQLException {
		Integer count = (Integer) sqlMapClient.queryForObject(
				"zp_post_info.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int deleteByExample(ZpPostInfoCriteria example) throws SQLException {
		int rows = sqlMapClient.delete(
				"zp_post_info.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int deleteByPrimaryKey(Long postId) throws SQLException {
		ZpPostInfo key = new ZpPostInfo();
		key.setPostId(postId);
		int rows = sqlMapClient.delete(
				"zp_post_info.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public Long insert(ZpPostInfo record) throws SQLException {
		Object newKey = sqlMapClient.insert(
				"zp_post_info.ibatorgenerated_insert", record);
		return (Long) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public Long insertSelective(ZpPostInfo record) throws SQLException {
		Object newKey = sqlMapClient.insert(
				"zp_post_info.ibatorgenerated_insertSelective", record);
		return (Long) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<ZpPostInfo> selectByExample(ZpPostInfoCriteria example)
			throws SQLException {
		List<ZpPostInfo> list = sqlMapClient.queryForList(
				"zp_post_info.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public ZpPostInfo selectByPrimaryKey(Long postId) throws SQLException {
		ZpPostInfo key = new ZpPostInfo();
		key.setPostId(postId);
		ZpPostInfo record = (ZpPostInfo) sqlMapClient.queryForObject(
				"zp_post_info.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int updateByExampleSelective(ZpPostInfo record,
			ZpPostInfoCriteria example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"zp_post_info.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int updateByExample(ZpPostInfo record, ZpPostInfoCriteria example)
			throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = sqlMapClient.update(
				"zp_post_info.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int updateByPrimaryKeySelective(ZpPostInfo record)
			throws SQLException {
		int rows = sqlMapClient.update(
				"zp_post_info.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	public int updateByPrimaryKey(ZpPostInfo record) throws SQLException {
		int rows = sqlMapClient.update(
				"zp_post_info.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table zp_post_info
	 * @ibatorgenerated  Thu Dec 19 10:46:23 CST 2013
	 */
	private static class UpdateByExampleParms extends ZpPostInfoCriteria {
		private Object record;

		public UpdateByExampleParms(Object record, ZpPostInfoCriteria example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}