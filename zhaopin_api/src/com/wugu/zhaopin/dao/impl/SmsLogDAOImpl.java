package com.wugu.zhaopin.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.wugu.zhaopin.dao.SmsLogDAO;
import com.wugu.zhaopin.vo.SmsLog;
import com.wugu.zhaopin.vo.SmsLogCriteria;
import java.sql.SQLException;
import java.util.List;

public class SmsLogDAOImpl implements SmsLogDAO {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public SmsLogDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int countByExample(SmsLogCriteria example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("sms_log.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int deleteByExample(SmsLogCriteria example) throws SQLException {
        int rows = sqlMapClient.delete("sms_log.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int deleteByPrimaryKey(Long id) throws SQLException {
        SmsLog key = new SmsLog();
        key.setId(id);
        int rows = sqlMapClient.delete("sms_log.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public Long insert(SmsLog record) throws SQLException {
        Object newKey = sqlMapClient.insert("sms_log.ibatorgenerated_insert", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public Long insertSelective(SmsLog record) throws SQLException {
        Object newKey = sqlMapClient.insert("sms_log.ibatorgenerated_insertSelective", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    @SuppressWarnings("unchecked")
    public List<SmsLog> selectByExample(SmsLogCriteria example) throws SQLException {
        List<SmsLog> list = sqlMapClient.queryForList("sms_log.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public SmsLog selectByPrimaryKey(Long id) throws SQLException {
        SmsLog key = new SmsLog();
        key.setId(id);
        SmsLog record = (SmsLog) sqlMapClient.queryForObject("sms_log.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int updateByExampleSelective(SmsLog record, SmsLogCriteria example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("sms_log.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int updateByExample(SmsLog record, SmsLogCriteria example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("sms_log.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int updateByPrimaryKeySelective(SmsLog record) throws SQLException {
        int rows = sqlMapClient.update("sms_log.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    public int updateByPrimaryKey(SmsLog record) throws SQLException {
        int rows = sqlMapClient.update("sms_log.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table sms_log
     *
     * @ibatorgenerated Fri Mar 21 15:10:08 CST 2014
     */
    private static class UpdateByExampleParms extends SmsLogCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, SmsLogCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}