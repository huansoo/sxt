package com.wugu.zhaopin.webapp.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZpDictinaryCriteria {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public ZpDictinaryCriteria() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	protected ZpDictinaryCriteria(ZpDictinaryCriteria example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table zp_dictinary
	 * @ibatorgenerated  Wed Dec 18 15:16:23 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andRowIdIsNull() {
			addCriterion("row_id is null");
			return this;
		}

		public Criteria andRowIdIsNotNull() {
			addCriterion("row_id is not null");
			return this;
		}

		public Criteria andRowIdEqualTo(Integer value) {
			addCriterion("row_id =", value, "rowId");
			return this;
		}

		public Criteria andRowIdNotEqualTo(Integer value) {
			addCriterion("row_id <>", value, "rowId");
			return this;
		}

		public Criteria andRowIdGreaterThan(Integer value) {
			addCriterion("row_id >", value, "rowId");
			return this;
		}

		public Criteria andRowIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("row_id >=", value, "rowId");
			return this;
		}

		public Criteria andRowIdLessThan(Integer value) {
			addCriterion("row_id <", value, "rowId");
			return this;
		}

		public Criteria andRowIdLessThanOrEqualTo(Integer value) {
			addCriterion("row_id <=", value, "rowId");
			return this;
		}

		public Criteria andRowIdIn(List<Integer> values) {
			addCriterion("row_id in", values, "rowId");
			return this;
		}

		public Criteria andRowIdNotIn(List<Integer> values) {
			addCriterion("row_id not in", values, "rowId");
			return this;
		}

		public Criteria andRowIdBetween(Integer value1, Integer value2) {
			addCriterion("row_id between", value1, value2, "rowId");
			return this;
		}

		public Criteria andRowIdNotBetween(Integer value1, Integer value2) {
			addCriterion("row_id not between", value1, value2, "rowId");
			return this;
		}

		public Criteria andDicIdIsNull() {
			addCriterion("dic_id is null");
			return this;
		}

		public Criteria andDicIdIsNotNull() {
			addCriterion("dic_id is not null");
			return this;
		}

		public Criteria andDicIdEqualTo(Integer value) {
			addCriterion("dic_id =", value, "dicId");
			return this;
		}

		public Criteria andDicIdNotEqualTo(Integer value) {
			addCriterion("dic_id <>", value, "dicId");
			return this;
		}

		public Criteria andDicIdGreaterThan(Integer value) {
			addCriterion("dic_id >", value, "dicId");
			return this;
		}

		public Criteria andDicIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("dic_id >=", value, "dicId");
			return this;
		}

		public Criteria andDicIdLessThan(Integer value) {
			addCriterion("dic_id <", value, "dicId");
			return this;
		}

		public Criteria andDicIdLessThanOrEqualTo(Integer value) {
			addCriterion("dic_id <=", value, "dicId");
			return this;
		}

		public Criteria andDicIdIn(List<Integer> values) {
			addCriterion("dic_id in", values, "dicId");
			return this;
		}

		public Criteria andDicIdNotIn(List<Integer> values) {
			addCriterion("dic_id not in", values, "dicId");
			return this;
		}

		public Criteria andDicIdBetween(Integer value1, Integer value2) {
			addCriterion("dic_id between", value1, value2, "dicId");
			return this;
		}

		public Criteria andDicIdNotBetween(Integer value1, Integer value2) {
			addCriterion("dic_id not between", value1, value2, "dicId");
			return this;
		}

		public Criteria andDicValueIsNull() {
			addCriterion("dic_value is null");
			return this;
		}

		public Criteria andDicValueIsNotNull() {
			addCriterion("dic_value is not null");
			return this;
		}

		public Criteria andDicValueEqualTo(String value) {
			addCriterion("dic_value =", value, "dicValue");
			return this;
		}

		public Criteria andDicValueNotEqualTo(String value) {
			addCriterion("dic_value <>", value, "dicValue");
			return this;
		}

		public Criteria andDicValueGreaterThan(String value) {
			addCriterion("dic_value >", value, "dicValue");
			return this;
		}

		public Criteria andDicValueGreaterThanOrEqualTo(String value) {
			addCriterion("dic_value >=", value, "dicValue");
			return this;
		}

		public Criteria andDicValueLessThan(String value) {
			addCriterion("dic_value <", value, "dicValue");
			return this;
		}

		public Criteria andDicValueLessThanOrEqualTo(String value) {
			addCriterion("dic_value <=", value, "dicValue");
			return this;
		}

		public Criteria andDicValueLike(String value) {
			addCriterion("dic_value like", value, "dicValue");
			return this;
		}

		public Criteria andDicValueNotLike(String value) {
			addCriterion("dic_value not like", value, "dicValue");
			return this;
		}

		public Criteria andDicValueIn(List<String> values) {
			addCriterion("dic_value in", values, "dicValue");
			return this;
		}

		public Criteria andDicValueNotIn(List<String> values) {
			addCriterion("dic_value not in", values, "dicValue");
			return this;
		}

		public Criteria andDicValueBetween(String value1, String value2) {
			addCriterion("dic_value between", value1, value2, "dicValue");
			return this;
		}

		public Criteria andDicValueNotBetween(String value1, String value2) {
			addCriterion("dic_value not between", value1, value2, "dicValue");
			return this;
		}

		public Criteria andGroupCodeIsNull() {
			addCriterion("group_code is null");
			return this;
		}

		public Criteria andGroupCodeIsNotNull() {
			addCriterion("group_code is not null");
			return this;
		}

		public Criteria andGroupCodeEqualTo(String value) {
			addCriterion("group_code =", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeNotEqualTo(String value) {
			addCriterion("group_code <>", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeGreaterThan(String value) {
			addCriterion("group_code >", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeGreaterThanOrEqualTo(String value) {
			addCriterion("group_code >=", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeLessThan(String value) {
			addCriterion("group_code <", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeLessThanOrEqualTo(String value) {
			addCriterion("group_code <=", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeLike(String value) {
			addCriterion("group_code like", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeNotLike(String value) {
			addCriterion("group_code not like", value, "groupCode");
			return this;
		}

		public Criteria andGroupCodeIn(List<String> values) {
			addCriterion("group_code in", values, "groupCode");
			return this;
		}

		public Criteria andGroupCodeNotIn(List<String> values) {
			addCriterion("group_code not in", values, "groupCode");
			return this;
		}

		public Criteria andGroupCodeBetween(String value1, String value2) {
			addCriterion("group_code between", value1, value2, "groupCode");
			return this;
		}

		public Criteria andGroupCodeNotBetween(String value1, String value2) {
			addCriterion("group_code not between", value1, value2, "groupCode");
			return this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("description in", values, "description");
			return this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("description not in", values, "description");
			return this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2,
					"description");
			return this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return this;
		}

		public Criteria andTypeEqualTo(Integer value) {
			addCriterion("type =", value, "type");
			return this;
		}

		public Criteria andTypeNotEqualTo(Integer value) {
			addCriterion("type <>", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThan(Integer value) {
			addCriterion("type >", value, "type");
			return this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("type >=", value, "type");
			return this;
		}

		public Criteria andTypeLessThan(Integer value) {
			addCriterion("type <", value, "type");
			return this;
		}

		public Criteria andTypeLessThanOrEqualTo(Integer value) {
			addCriterion("type <=", value, "type");
			return this;
		}

		public Criteria andTypeIn(List<Integer> values) {
			addCriterion("type in", values, "type");
			return this;
		}

		public Criteria andTypeNotIn(List<Integer> values) {
			addCriterion("type not in", values, "type");
			return this;
		}

		public Criteria andTypeBetween(Integer value1, Integer value2) {
			addCriterion("type between", value1, value2, "type");
			return this;
		}

		public Criteria andTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("type not between", value1, value2, "type");
			return this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("status =", value, "status");
			return this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("status <>", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("status >", value, "status");
			return this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("status >=", value, "status");
			return this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("status <", value, "status");
			return this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("status <=", value, "status");
			return this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("status in", values, "status");
			return this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("status not in", values, "status");
			return this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("status between", value1, value2, "status");
			return this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("status not between", value1, value2, "status");
			return this;
		}

		public Criteria andOrderIndexIsNull() {
			addCriterion("order_index is null");
			return this;
		}

		public Criteria andOrderIndexIsNotNull() {
			addCriterion("order_index is not null");
			return this;
		}

		public Criteria andOrderIndexEqualTo(Integer value) {
			addCriterion("order_index =", value, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexNotEqualTo(Integer value) {
			addCriterion("order_index <>", value, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexGreaterThan(Integer value) {
			addCriterion("order_index >", value, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexGreaterThanOrEqualTo(Integer value) {
			addCriterion("order_index >=", value, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexLessThan(Integer value) {
			addCriterion("order_index <", value, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexLessThanOrEqualTo(Integer value) {
			addCriterion("order_index <=", value, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexIn(List<Integer> values) {
			addCriterion("order_index in", values, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexNotIn(List<Integer> values) {
			addCriterion("order_index not in", values, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexBetween(Integer value1, Integer value2) {
			addCriterion("order_index between", value1, value2, "orderIndex");
			return this;
		}

		public Criteria andOrderIndexNotBetween(Integer value1, Integer value2) {
			addCriterion("order_index not between", value1, value2,
					"orderIndex");
			return this;
		}
	}
}