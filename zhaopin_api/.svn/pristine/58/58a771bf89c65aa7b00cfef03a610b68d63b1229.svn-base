package com.wugu.zhaopin.vo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BaseCityCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public BaseCityCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    protected BaseCityCriteria(BaseCityCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table base_City
     *
     * @ibatorgenerated Tue Jan 07 09:58:02 CST 2014
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCityidIsNull() {
            addCriterion("CityID is null");
            return this;
        }

        public Criteria andCityidIsNotNull() {
            addCriterion("CityID is not null");
            return this;
        }

        public Criteria andCityidEqualTo(Integer value) {
            addCriterion("CityID =", value, "cityid");
            return this;
        }

        public Criteria andCityidNotEqualTo(Integer value) {
            addCriterion("CityID <>", value, "cityid");
            return this;
        }

        public Criteria andCityidGreaterThan(Integer value) {
            addCriterion("CityID >", value, "cityid");
            return this;
        }

        public Criteria andCityidGreaterThanOrEqualTo(Integer value) {
            addCriterion("CityID >=", value, "cityid");
            return this;
        }

        public Criteria andCityidLessThan(Integer value) {
            addCriterion("CityID <", value, "cityid");
            return this;
        }

        public Criteria andCityidLessThanOrEqualTo(Integer value) {
            addCriterion("CityID <=", value, "cityid");
            return this;
        }

        public Criteria andCityidIn(List<Integer> values) {
            addCriterion("CityID in", values, "cityid");
            return this;
        }

        public Criteria andCityidNotIn(List<Integer> values) {
            addCriterion("CityID not in", values, "cityid");
            return this;
        }

        public Criteria andCityidBetween(Integer value1, Integer value2) {
            addCriterion("CityID between", value1, value2, "cityid");
            return this;
        }

        public Criteria andCityidNotBetween(Integer value1, Integer value2) {
            addCriterion("CityID not between", value1, value2, "cityid");
            return this;
        }

        public Criteria andProvinceidIsNull() {
            addCriterion("ProvinceID is null");
            return this;
        }

        public Criteria andProvinceidIsNotNull() {
            addCriterion("ProvinceID is not null");
            return this;
        }

        public Criteria andProvinceidEqualTo(Integer value) {
            addCriterion("ProvinceID =", value, "provinceid");
            return this;
        }

        public Criteria andProvinceidNotEqualTo(Integer value) {
            addCriterion("ProvinceID <>", value, "provinceid");
            return this;
        }

        public Criteria andProvinceidGreaterThan(Integer value) {
            addCriterion("ProvinceID >", value, "provinceid");
            return this;
        }

        public Criteria andProvinceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ProvinceID >=", value, "provinceid");
            return this;
        }

        public Criteria andProvinceidLessThan(Integer value) {
            addCriterion("ProvinceID <", value, "provinceid");
            return this;
        }

        public Criteria andProvinceidLessThanOrEqualTo(Integer value) {
            addCriterion("ProvinceID <=", value, "provinceid");
            return this;
        }

        public Criteria andProvinceidIn(List<Integer> values) {
            addCriterion("ProvinceID in", values, "provinceid");
            return this;
        }

        public Criteria andProvinceidNotIn(List<Integer> values) {
            addCriterion("ProvinceID not in", values, "provinceid");
            return this;
        }

        public Criteria andProvinceidBetween(Integer value1, Integer value2) {
            addCriterion("ProvinceID between", value1, value2, "provinceid");
            return this;
        }

        public Criteria andProvinceidNotBetween(Integer value1, Integer value2) {
            addCriterion("ProvinceID not between", value1, value2, "provinceid");
            return this;
        }

        public Criteria andCitynameIsNull() {
            addCriterion("CityName is null");
            return this;
        }

        public Criteria andCitynameIsNotNull() {
            addCriterion("CityName is not null");
            return this;
        }

        public Criteria andCitynameEqualTo(String value) {
            addCriterion("CityName =", value, "cityname");
            return this;
        }

        public Criteria andCitynameNotEqualTo(String value) {
            addCriterion("CityName <>", value, "cityname");
            return this;
        }

        public Criteria andCitynameGreaterThan(String value) {
            addCriterion("CityName >", value, "cityname");
            return this;
        }

        public Criteria andCitynameGreaterThanOrEqualTo(String value) {
            addCriterion("CityName >=", value, "cityname");
            return this;
        }

        public Criteria andCitynameLessThan(String value) {
            addCriterion("CityName <", value, "cityname");
            return this;
        }

        public Criteria andCitynameLessThanOrEqualTo(String value) {
            addCriterion("CityName <=", value, "cityname");
            return this;
        }

        public Criteria andCitynameLike(String value) {
            addCriterion("CityName like", value, "cityname");
            return this;
        }

        public Criteria andCitynameNotLike(String value) {
            addCriterion("CityName not like", value, "cityname");
            return this;
        }

        public Criteria andCitynameIn(List<String> values) {
            addCriterion("CityName in", values, "cityname");
            return this;
        }

        public Criteria andCitynameNotIn(List<String> values) {
            addCriterion("CityName not in", values, "cityname");
            return this;
        }

        public Criteria andCitynameBetween(String value1, String value2) {
            addCriterion("CityName between", value1, value2, "cityname");
            return this;
        }

        public Criteria andCitynameNotBetween(String value1, String value2) {
            addCriterion("CityName not between", value1, value2, "cityname");
            return this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("Type is null");
            return this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("Type is not null");
            return this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("Type =", value, "type");
            return this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("Type <>", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("Type >", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Type >=", value, "type");
            return this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("Type <", value, "type");
            return this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("Type <=", value, "type");
            return this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("Type in", values, "type");
            return this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("Type not in", values, "type");
            return this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("Type between", value1, value2, "type");
            return this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("Type not between", value1, value2, "type");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("Status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("Status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("Status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("Status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("Status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("Status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("Status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("Status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("Status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("Status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("Status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("Status not between", value1, value2, "status");
            return this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CreateTime is null");
            return this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CreateTime is not null");
            return this;
        }

        public Criteria andCreatetimeEqualTo(Integer value) {
            addCriterion("CreateTime =", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotEqualTo(Integer value) {
            addCriterion("CreateTime <>", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeGreaterThan(Integer value) {
            addCriterion("CreateTime >", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("CreateTime >=", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeLessThan(Integer value) {
            addCriterion("CreateTime <", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Integer value) {
            addCriterion("CreateTime <=", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeIn(List<Integer> values) {
            addCriterion("CreateTime in", values, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotIn(List<Integer> values) {
            addCriterion("CreateTime not in", values, "createtime");
            return this;
        }

        public Criteria andCreatetimeBetween(Integer value1, Integer value2) {
            addCriterion("CreateTime between", value1, value2, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotBetween(Integer value1, Integer value2) {
            addCriterion("CreateTime not between", value1, value2, "createtime");
            return this;
        }

        public Criteria andUpdatetimeIsNull() {
            addCriterion("UpdateTime is null");
            return this;
        }

        public Criteria andUpdatetimeIsNotNull() {
            addCriterion("UpdateTime is not null");
            return this;
        }

        public Criteria andUpdatetimeEqualTo(Integer value) {
            addCriterion("UpdateTime =", value, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeNotEqualTo(Integer value) {
            addCriterion("UpdateTime <>", value, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeGreaterThan(Integer value) {
            addCriterion("UpdateTime >", value, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("UpdateTime >=", value, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeLessThan(Integer value) {
            addCriterion("UpdateTime <", value, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeLessThanOrEqualTo(Integer value) {
            addCriterion("UpdateTime <=", value, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeIn(List<Integer> values) {
            addCriterion("UpdateTime in", values, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeNotIn(List<Integer> values) {
            addCriterion("UpdateTime not in", values, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeBetween(Integer value1, Integer value2) {
            addCriterion("UpdateTime between", value1, value2, "updatetime");
            return this;
        }

        public Criteria andUpdatetimeNotBetween(Integer value1, Integer value2) {
            addCriterion("UpdateTime not between", value1, value2, "updatetime");
            return this;
        }

        public Criteria andOpidIsNull() {
            addCriterion("OpID is null");
            return this;
        }

        public Criteria andOpidIsNotNull() {
            addCriterion("OpID is not null");
            return this;
        }

        public Criteria andOpidEqualTo(Long value) {
            addCriterion("OpID =", value, "opid");
            return this;
        }

        public Criteria andOpidNotEqualTo(Long value) {
            addCriterion("OpID <>", value, "opid");
            return this;
        }

        public Criteria andOpidGreaterThan(Long value) {
            addCriterion("OpID >", value, "opid");
            return this;
        }

        public Criteria andOpidGreaterThanOrEqualTo(Long value) {
            addCriterion("OpID >=", value, "opid");
            return this;
        }

        public Criteria andOpidLessThan(Long value) {
            addCriterion("OpID <", value, "opid");
            return this;
        }

        public Criteria andOpidLessThanOrEqualTo(Long value) {
            addCriterion("OpID <=", value, "opid");
            return this;
        }

        public Criteria andOpidIn(List<Long> values) {
            addCriterion("OpID in", values, "opid");
            return this;
        }

        public Criteria andOpidNotIn(List<Long> values) {
            addCriterion("OpID not in", values, "opid");
            return this;
        }

        public Criteria andOpidBetween(Long value1, Long value2) {
            addCriterion("OpID between", value1, value2, "opid");
            return this;
        }

        public Criteria andOpidNotBetween(Long value1, Long value2) {
            addCriterion("OpID not between", value1, value2, "opid");
            return this;
        }
    }
}