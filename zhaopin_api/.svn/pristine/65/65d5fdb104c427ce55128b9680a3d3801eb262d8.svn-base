package com.wugu.zhaopin.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.wugu.zhaopin.dao.ZpPersonInfoDAO;
import java.sql.SQLException;
import java.util.List;
import com.wugu.zhaopin.dao.ZpPersonInfoDAO;
import com.wugu.zhaopin.vo.ZpPersonInfo;
import com.wugu.zhaopin.vo.ZpPersonInfoCriteria;

public class ZpPersonInfoDAOImpl implements ZpPersonInfoDAO {

    /**
     * This field was generated by Apache iBATIS ibator. This field corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public ZpPersonInfoDAOImpl(SqlMapClient sqlMapClient)
    {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int countByExample(ZpPersonInfoCriteria example) throws SQLException
    {
        Integer count = (Integer) sqlMapClient.queryForObject(
                "zp_person_info.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int deleteByExample(ZpPersonInfoCriteria example)
            throws SQLException
    {
        int rows = sqlMapClient.delete(
                "zp_person_info.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int deleteByPrimaryKey(Long userId) throws SQLException
    {
        ZpPersonInfo key = new ZpPersonInfo();
        key.setUserId(userId);
        int rows = sqlMapClient.delete(
                "zp_person_info.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public void insert(ZpPersonInfo record) throws SQLException
    {
        sqlMapClient.insert("zp_person_info.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public void insertSelective(ZpPersonInfo record) throws SQLException
    {
        sqlMapClient.insert("zp_person_info.ibatorgenerated_insertSelective",
                record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<ZpPersonInfo> selectByExample(ZpPersonInfoCriteria example)
            throws SQLException
    {
        List<ZpPersonInfo> list = sqlMapClient.queryForList(
                "zp_person_info.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public ZpPersonInfo selectByPrimaryKey(Long userId) throws SQLException
    {
        ZpPersonInfo key = new ZpPersonInfo();
        key.setUserId(userId);
        ZpPersonInfo record = (ZpPersonInfo) sqlMapClient.queryForObject(
                "zp_person_info.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int updateByExampleSelective(ZpPersonInfo record,
            ZpPersonInfoCriteria example) throws SQLException
    {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update(
                "zp_person_info.ibatorgenerated_updateByExampleSelective",
                parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int updateByExample(ZpPersonInfo record, ZpPersonInfoCriteria example)
            throws SQLException
    {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update(
                "zp_person_info.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int updateByPrimaryKeySelective(ZpPersonInfo record)
            throws SQLException
    {
        int rows = sqlMapClient.update(
                "zp_person_info.ibatorgenerated_updateByPrimaryKeySelective",
                record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    public int updateByPrimaryKey(ZpPersonInfo record) throws SQLException
    {
        int rows = sqlMapClient.update(
                "zp_person_info.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator. This class corresponds to the database table zp_person_info
     * @ibatorgenerated  Thu Dec 26 17:11:50 CST 2013
     */
    private static class UpdateByExampleParms extends ZpPersonInfoCriteria
    {
        private Object record;

        public UpdateByExampleParms(Object record, ZpPersonInfoCriteria example)
        {
            super(example);
            this.record = record;
        }

        public Object getRecord()
        {
            return record;
        }
    }
}